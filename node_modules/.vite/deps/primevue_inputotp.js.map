{
  "version": 3,
  "sources": ["../../primevue/inputotp/style/inputotpstyle.esm.js", "../../primevue/inputotp/inputotp.esm.js"],
  "sourcesContent": ["import BaseStyle from 'primevue/base/style';\n\nvar classes = {\n  root: 'p-inputotp p-component',\n  input: 'p-inputotp-input'\n};\nvar InputOtpStyle = BaseStyle.extend({\n  name: 'inputotp',\n  classes: classes\n});\n\nexport { InputOtpStyle as default };\n", "import InputText from 'primevue/inputtext';\nimport BaseComponent from 'primevue/basecomponent';\nimport InputOtpStyle from 'primevue/inputotp/style';\nimport { resolveComponent, openBlock, createElementBlock, mergeProps, Fragment, renderList, renderSlot, createVNode, normalizeClass } from 'vue';\n\nvar script$1 = {\n  name: 'BaseInputOtp',\n  \"extends\": BaseComponent,\n  props: {\n    modelValue: {\n      type: null,\n      \"default\": false\n    },\n    invalid: {\n      type: Boolean,\n      \"default\": false\n    },\n    disabled: {\n      type: Boolean,\n      \"default\": false\n    },\n    readonly: {\n      type: Boolean,\n      \"default\": false\n    },\n    variant: {\n      type: String,\n      \"default\": null\n    },\n    tabindex: {\n      type: Number,\n      \"default\": null\n    },\n    length: {\n      type: Number,\n      \"default\": 4\n    },\n    mask: {\n      type: Boolean,\n      \"default\": false\n    },\n    integerOnly: {\n      type: Boolean,\n      \"default\": false\n    }\n  },\n  style: InputOtpStyle,\n  provide: function provide() {\n    return {\n      $parentInstance: this\n    };\n  }\n};\n\nvar script = {\n  name: 'InputOtp',\n  \"extends\": script$1,\n  inheritAttrs: false,\n  emits: ['update:modelValue', 'change', 'focus', 'blur'],\n  data: function data() {\n    return {\n      tokens: []\n    };\n  },\n  watch: {\n    modelValue: {\n      immediate: true,\n      handler: function handler(newValue) {\n        this.tokens = newValue ? newValue.split('') : new Array(this.length);\n      }\n    }\n  },\n  methods: {\n    getTemplateAttrs: function getTemplateAttrs(index) {\n      return {\n        value: this.tokens[index]\n      };\n    },\n    getTemplateEvents: function getTemplateEvents(index) {\n      var _this = this;\n      return {\n        input: function input(event) {\n          return _this.onInput(event, index);\n        },\n        keydown: function keydown(event) {\n          return _this.onKeyDown(event);\n        },\n        focus: function focus(event) {\n          return _this.onFocus(event);\n        },\n        blur: function blur(event) {\n          return _this.onBlur(event);\n        },\n        paste: function paste(event) {\n          return _this.onPaste(event);\n        }\n      };\n    },\n    getPTOptions: function getPTOptions(key) {\n      var _ptm = key === 'root' ? this.ptmi : this.ptm;\n      return _ptm(key, {\n        context: {\n          checked: this.checked,\n          disabled: this.disabled\n        }\n      });\n    },\n    onInput: function onInput(event, index) {\n      this.tokens[index] = event.target.value;\n      this.updateModel(event);\n      if (event.inputType === 'deleteContentBackward') {\n        this.moveToPrev(event);\n      } else if (event.inputType === 'insertText' || event.inputType === 'deleteContentForward') {\n        this.moveToNext(event);\n      }\n    },\n    updateModel: function updateModel(event) {\n      var newValue = this.tokens.join('');\n      this.$emit('update:modelValue', newValue);\n      this.$emit('change', {\n        originalEvent: event,\n        value: newValue\n      });\n    },\n    moveToPrev: function moveToPrev(event) {\n      var prevInput = this.findPrevInput(event.target);\n      if (prevInput) {\n        prevInput.focus();\n        prevInput.select();\n      }\n    },\n    moveToNext: function moveToNext(event) {\n      var nextInput = this.findNextInput(event.target);\n      if (nextInput) {\n        nextInput.focus();\n        nextInput.select();\n      }\n    },\n    findNextInput: function findNextInput(element) {\n      var nextElement = element.nextElementSibling;\n      if (!nextElement) return;\n      return nextElement.nodeName === 'INPUT' ? nextElement : this.findNextInput(nextElement);\n    },\n    findPrevInput: function findPrevInput(element) {\n      var prevElement = element.previousElementSibling;\n      if (!prevElement) return;\n      return prevElement.nodeName === 'INPUT' ? prevElement : this.findPrevInput(prevElement);\n    },\n    onFocus: function onFocus(event) {\n      event.target.select();\n      this.$emit('focus', event);\n    },\n    onBlur: function onBlur(event) {\n      this.$emit('blur', event);\n    },\n    onKeyDown: function onKeyDown(event) {\n      switch (event.code) {\n        case 'ArrowLeft':\n          this.moveToPrev(event);\n          event.preventDefault();\n          break;\n        case 'ArrowUp':\n        case 'ArrowDown':\n          event.preventDefault();\n          break;\n        case 'Backspace':\n          if (event.target.value.length === 0) {\n            this.moveToPrev(event);\n            event.preventDefault();\n          }\n          break;\n        case 'ArrowRight':\n          this.moveToNext(event);\n          event.preventDefault();\n          break;\n        default:\n          if (this.integerOnly && !((event.code.startsWith('Digit') || event.code.startsWith('Numpad')) && Number(event.key) >= 0 && Number(event.key) <= 9) || this.tokens.join('').length >= this.length && event.code !== 'Delete') {\n            event.preventDefault();\n          }\n          break;\n      }\n    },\n    onPaste: function onPaste(event) {\n      var paste = event.clipboardData.getData('text');\n      if (paste.length) {\n        var pastedCode = paste.substring(0, this.length + 1);\n        if (!this.integerOnly || !isNaN(pastedCode)) {\n          this.tokens = pastedCode.split('');\n          this.updateModel(event);\n        }\n      }\n      event.preventDefault();\n    }\n  },\n  computed: {\n    inputMode: function inputMode() {\n      return this.integerOnly ? 'numeric' : 'text';\n    },\n    inputType: function inputType() {\n      return this.mask ? 'password' : 'text';\n    }\n  },\n  components: {\n    OtpInputText: InputText\n  }\n};\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_OtpInputText = resolveComponent(\"OtpInputText\");\n  return openBlock(), createElementBlock(\"div\", mergeProps({\n    \"class\": _ctx.cx('root')\n  }, _ctx.ptmi('root')), [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.length, function (i) {\n    return renderSlot(_ctx.$slots, \"default\", {\n      key: i,\n      events: $options.getTemplateEvents(i - 1),\n      attrs: $options.getTemplateAttrs(i - 1),\n      index: i\n    }, function () {\n      return [createVNode(_component_OtpInputText, {\n        value: $data.tokens[i - 1],\n        type: $options.inputType,\n        \"class\": normalizeClass(_ctx.cx('input')),\n        inputmode: $options.inputMode,\n        variant: _ctx.variant,\n        readonly: _ctx.readonly,\n        disabled: _ctx.disabled,\n        invalid: _ctx.invalid,\n        tabindex: _ctx.tabindex,\n        unstyled: _ctx.unstyled,\n        onInput: function onInput($event) {\n          return $options.onInput($event, i - 1);\n        },\n        onFocus: _cache[0] || (_cache[0] = function ($event) {\n          return $options.onFocus($event);\n        }),\n        onBlur: _cache[1] || (_cache[1] = function ($event) {\n          return $options.onBlur($event);\n        }),\n        onPaste: _cache[2] || (_cache[2] = function ($event) {\n          return $options.onPaste($event);\n        }),\n        onKeydown: _cache[3] || (_cache[3] = function ($event) {\n          return $options.onKeyDown($event);\n        }),\n        pt: _ctx.ptm('input')\n      }, null, 8, [\"value\", \"type\", \"class\", \"inputmode\", \"variant\", \"readonly\", \"disabled\", \"invalid\", \"tabindex\", \"unstyled\", \"onInput\", \"pt\"])];\n    });\n  }), 128))], 16);\n}\n\nscript.render = render;\n\nexport { script as default };\n"],
  "mappings": "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",
  "names": ["script", "onInput"]
}
